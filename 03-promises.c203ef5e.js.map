{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEAD,EAAAE,OAAOC,KAAK,CACVC,MAAO,QACPC,SAAU,YACVC,SAAU,OACVC,QAAS,EACTC,aAAc,MACdC,KAAK,EACLC,QAAS,IACTC,iBAAkB,IAClBC,aAAa,EACbC,iBAAkB,kBAClBC,WAAW,EACXC,oBAAoB,EACpBC,cAAc,EACdC,cAAc,EAEdC,GAAI,iBACJC,UAAW,kBACXC,OAAQ,KACRC,WAAY,YACZC,SAAU,OACVC,cAAc,EACdC,qBAAsB,IACtBC,kBAAmB,OACnBC,aAAa,EACbC,SAAS,EACTC,gBAAgB,EAChBC,qBAAsB,QACtBC,oBAAqB,OAErBC,QAAS,CACPC,WAAY,UACZC,UAAW,OACXC,eAAgB,0BAChBC,kBAAmB,kBACnBC,qBAAsB,sBACtBC,qBAAsB,kBACtBxB,iBAAkB,wBAGpByB,QAAS,CACPN,WAAY,UACZC,UAAW,OACXC,eAAgB,0BAChBC,kBAAmB,kBACnBC,qBAAsB,sBACtBC,qBAAsB,kBACtBxB,iBAAkB,yBAKtB,IAAM0B,EAAgB,SAAClC,EAAUmC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EAEFF,EAAQ,CAAErC,WAAUmC,UAGpBG,EAAO,CAAEtC,WAAUmC,S,GAEpBA,E,KAuBMQ,SAASC,cAAc,SAC/BC,iBAAiB,UApBD,SAACC,GACpBA,EAAEC,iBAMF,IAJA,IAAIC,EAAQC,OAAOH,EAAEI,cAAc,GAAGC,OAChCC,EAAOH,OAAOH,EAAEI,cAAc,GAAGC,OACjCE,EAAWJ,OAAOH,EAAEI,cAAc,GAAGC,OAElCG,EAAI,EAAGA,GAAKD,EAAUC,GAAK,EAClCpB,EAAcoB,EAAGN,GACdO,MAAK,SAAAC,G,IAAGxD,EAAQwD,EAARxD,SAAUmC,EAAKqB,EAALrB,MACjBxC,EAAAE,OAAO6B,QAAQ,uBAAwC+B,OAAfzD,EAAS,QAAYyD,OAANtB,EAAM,M,IAE9DuB,OAAM,SAAAF,G,IAAGxD,EAAQwD,EAARxD,SAAUmC,EAAKqB,EAALrB,MAClBxC,EAAAE,OAAOoC,QAAQ,sBAAqCwB,OAAfzD,EAAS,QAAYyD,OAANtB,EAAM,M,IAE9Da,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nNotify.init({\n  width: '280px',\n  position: 'right-top', // 'right-top' - 'right-bottom' - 'left-top' - 'left-bottom' - 'center-top' - 'center-bottom' - 'center-center'\n  distance: '10px',\n  opacity: 1,\n  borderRadius: '5px',\n  rtl: false,\n  timeout: 3000,\n  messageMaxLength: 110,\n  backOverlay: false,\n  backOverlayColor: 'rgba(0,0,0,0.5)',\n  plainText: true,\n  showOnlyTheLastOne: false,\n  clickToClose: false,\n  pauseOnHover: true,\n\n  ID: 'NotiflixNotify',\n  className: 'notiflix-notify',\n  zindex: 4001,\n  fontFamily: 'Quicksand',\n  fontSize: '13px',\n  cssAnimation: true,\n  cssAnimationDuration: 400,\n  cssAnimationStyle: 'fade', // 'fade' - 'zoom' - 'from-right' - 'from-top' - 'from-bottom' - 'from-left'\n  closeButton: false,\n  useIcon: true,\n  useFontAwesome: false,\n  fontAwesomeIconStyle: 'basic', // 'basic' - 'shadow'\n  fontAwesomeIconSize: '34px',\n\n  success: {\n    background: '#32c682',\n    textColor: '#fff',\n    childClassName: 'notiflix-notify-success',\n    notiflixIconColor: 'rgba(0,0,0,0.2)',\n    fontAwesomeClassName: 'fas fa-check-circle',\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\n    backOverlayColor: 'rgba(50,198,130,0.2)',\n  },\n\n  failure: {\n    background: '#ff5549',\n    textColor: '#fff',\n    childClassName: 'notiflix-notify-failure',\n    notiflixIconColor: 'rgba(0,0,0,0.2)',\n    fontAwesomeClassName: 'fas fa-times-circle',\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\n    backOverlayColor: 'rgba(255,85,73,0.2)',\n  },\n});\n\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst onSubmitForm = (e) => {\n  e.preventDefault();\n\n  let delay = Number(e.currentTarget[0].value);\n  const step = Number(e.currentTarget[1].value);\n  const position = Number(e.currentTarget[2].value);\n\n  for (let i = 1; i <= position; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmitForm);\n\n\n"],"names":["$h6c0i","parcelRequire","Notify","init","width","position","distance","opacity","borderRadius","rtl","timeout","messageMaxLength","backOverlay","backOverlayColor","plainText","showOnlyTheLastOne","clickToClose","pauseOnHover","ID","className","zindex","fontFamily","fontSize","cssAnimation","cssAnimationDuration","cssAnimationStyle","closeButton","useIcon","useFontAwesome","fontAwesomeIconStyle","fontAwesomeIconSize","success","background","textColor","childClassName","notiflixIconColor","fontAwesomeClassName","fontAwesomeIconColor","failure","$ce04d3a99e08e73b$var$createPromise","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","delay1","Number","currentTarget","value","step","position1","i","then","param","concat","catch"],"version":3,"file":"03-promises.c203ef5e.js.map"}